{"ast":null,"code":"import \"antd/lib/breadcrumb/style/css\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/menu/style/css\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"D:\\\\react-admin-master\\\\src\\\\utils\\\\index.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport request from './request';\nconst Option = _Select.Option;\nconst SubMenu = _Menu.SubMenu;\nconst MenuItem = _Menu.Item; //获取侧边栏Item\n\nexport const getMenuItem = list => {\n  return list.map((item, index) => {\n    if (item.children && item.children.length > 0) {\n      return React.createElement(SubMenu, {\n        key: item.path,\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: item.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, item.name)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, getMenuItem(item.children));\n    } else {\n      return React.createElement(MenuItem, {\n        key: item.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: item.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: item.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, item.name)));\n    }\n  });\n}; //获取面包屑Item\n\nexport const getBreadItem = list => {\n  const arr = [];\n\n  function getItem(allList) {\n    allList.forEach((item, index) => {\n      if (item.children && item.children.length > 0) {\n        arr.push(React.createElement(_Breadcrumb.Item, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: item.redirect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, item.name)));\n        getItem(item.children);\n      } else {\n        arr.push(React.createElement(_Breadcrumb.Item, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: item.path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, item.name)));\n      }\n    });\n  }\n\n  getItem(list);\n  return arr;\n}; //左侧栏默认展开项\n\nexport const filterRoutes = pathname => {\n  let pathSnippets = pathname.split('/').filter(path => path);\n  let paths = pathSnippets.map((path, index) => \"/\".concat(pathSnippets.slice(0, index + 1).join('/')));\n  paths.splice(0, 1);\n  return paths;\n}; //获取options\n\nexport const getOptionsList = data => {\n  if (!(data instanceof Array)) {\n    return [];\n  }\n\n  ;\n  return data.map((item, index) => {\n    return React.createElement(Option, {\n      key: item.id,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, item.label);\n  });\n}; //获取分页关键内容\n\nexport const pagination = (data, callback) => {\n  return {\n    current: data.page,\n    pageSize: data.pageSize,\n    total: data.total,\n    showQuickJumper: false,\n    onChange: current => {\n      callback(current);\n    },\n    showTotal: () => {\n      return \"\\u5171\".concat(data.total, \"\\u6761\");\n    }\n  };\n}; //初始列表\n\nexport const getList = (_this, options) => {\n  request(options).then(res => {\n    if (res && res.data && res.data.data) {\n      let dataSource = res.data.data.map((item, index) => {\n        item.key = index;\n        return item;\n      });\n\n      _this.setState({\n        dataSource,\n        pagination: pagination(res.data, current => {\n          _this.params.page = current;\n\n          _this.requestList();\n        })\n      });\n    }\n  });\n}; //设置勾选后的内容\n\n/**\n * @param {*选中行的索引} selectedRowKeys Array\n * @param {*选中行对象} selectedItem Array\n */\n\nexport const updateSelectedItem = (selectedRowKeys, selectedRows, that) => {\n  const rowSelection = {\n    selectedRowKeys,\n    selectedRows\n  };\n  that.setState({\n    rowSelection\n  });\n}; //获取localstorage\n\nexport const getLocal = item => {\n  return localStorage.getItem(item);\n}; //设置localstorage\n\nexport const setLocal = (key, value) => {\n  localStorage.setItem(key, value);\n}; //移除\n\nexport const removeLocal = key => {\n  localStorage.removeItem(key);\n}; //时间戳转换\n\nexport const formateDate = time => {\n  if (!time) return '';\n  let date = new Date(time);\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n};","map":{"version":3,"sources":["D:\\react-admin-master\\src\\utils\\index.js"],"names":["React","Link","request","Option","SubMenu","MenuItem","Item","getMenuItem","list","map","item","index","children","length","path","icon","name","getBreadItem","arr","getItem","allList","forEach","push","redirect","filterRoutes","pathname","pathSnippets","split","filter","paths","slice","join","splice","getOptionsList","data","Array","id","value","label","pagination","callback","current","page","pageSize","total","showQuickJumper","onChange","showTotal","getList","_this","options","then","res","dataSource","key","setState","params","requestList","updateSelectedItem","selectedRowKeys","selectedRows","that","rowSelection","getLocal","localStorage","setLocal","setItem","removeLocal","removeItem","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Menu, Icon, Breadcrumb,Select } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport request from './request'\n\nconst Option = Select.Option\nconst { SubMenu } = Menu\nconst MenuItem = Menu.Item\n\n//获取侧边栏Item\nexport const getMenuItem = list => {\n    return list.map((item, index) => {\n        if (item.children && item.children.length > 0) {\n            return (\n                <SubMenu\n                    key={item.path}\n                    title={\n                        <span>\n                            <Icon type={item.icon} />\n                            <span>{item.name}</span>\n                        </span>\n                    }\n                >\n                    {getMenuItem(item.children)}\n                </SubMenu>\n            )\n        } else {\n            return (\n                <MenuItem key={item.path}>\n                    <Link to={item.path}>\n                        <Icon type={item.icon} />\n                        <span>{item.name}</span>\n                    </Link>\n                </MenuItem>\n            )\n        }\n    })\n}\n\n//获取面包屑Item\nexport const getBreadItem = (list) => {\n    const arr = [];\n    function getItem(allList){\n        allList.forEach((item,index) => {\n            if(item.children && item.children.length>0){\n                arr.push(\n                    <Breadcrumb.Item key={index}>\n                        <Link  to={item.redirect}>\n                            {item.name}\n                        </Link>\n                    </Breadcrumb.Item>\n                )\n                getItem(item.children)\n                \n            }else{\n                arr.push(\n                    <Breadcrumb.Item key={index}>\n                        <Link  to={item.path}>\n                            {item.name}\n                        </Link>\n                    </Breadcrumb.Item>\n                )\n            }\n            \n        })\n    }\n    getItem(list)\n    return arr\n}\n\n//左侧栏默认展开项\nexport const filterRoutes = pathname => {\n    let pathSnippets = pathname.split('/').filter(path => path)\n    let paths = pathSnippets.map((path, index) => `/${pathSnippets.slice(0, index + 1).join('/')}`)\n    paths.splice(0,1)\n    return paths\n}\n\n//获取options\nexport const getOptionsList = data => {\n    if(!(data instanceof Array)){\n        return []\n    };\n    return data.map((item,index)=>{\n        return <Option key={item.id} value={item.value}>{item.label}</Option>\n    })\n}\n\n//获取分页关键内容\nexport const pagination = (data,callback) =>{\n    return {\n        current:data.page,\n        pageSize:data.pageSize,\n        total:data.total,\n        showQuickJumper:false,\n        onChange:(current)=>{\n            callback(current)\n        },\n        showTotal:()=>{\n            return `共${data.total}条`\n        }\n    }\n}\n\n//初始列表\nexport const getList = (_this,options) => {\n    request(options)\n    .then(res =>{\n        if(res && res.data && res.data.data){\n            let dataSource = res.data.data.map((item, index) => {\n                item.key = index;\n                return item;\n            });\n            _this.setState({\n                dataSource,\n                pagination: pagination(res.data, (current) => {\n                    _this.params.page = current;\n                    _this.requestList();\n                })\n            })\n        }\n    })\n}\n\n//设置勾选后的内容\n/**\n * @param {*选中行的索引} selectedRowKeys Array\n * @param {*选中行对象} selectedItem Array\n */\nexport const updateSelectedItem = (selectedRowKeys,selectedRows,that) => {\n    const rowSelection = {\n        selectedRowKeys,selectedRows\n    }\n    that.setState({\n        rowSelection\n    })\n}\n\n//获取localstorage\nexport const getLocal = item => {\n    return localStorage.getItem(item)\n}\n\n//设置localstorage\nexport const setLocal = (key,value) => {\n    localStorage.setItem(key,value)\n}\n\n//移除\nexport const removeLocal = (key) => {\n    localStorage.removeItem(key)\n}\n\n//时间戳转换\nexport const formateDate = time => {\n    if(!time)return '';\n    let date = new Date(time);\n    return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\n}"]},"metadata":{},"sourceType":"module"}