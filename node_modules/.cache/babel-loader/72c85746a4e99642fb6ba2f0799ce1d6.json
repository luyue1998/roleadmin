{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-admin-master\\\\src\\\\utils\\\\renderRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nconst renderRoutes = (routes, authed, authPath = '/login', extraProps = {}, switchProps = {}) => routes ? React.createElement(Switch, Object.assign({}, switchProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}), routes.map((route, i) => React.createElement(Route, {\n  key: route.key || i,\n  path: route.path,\n  exact: route.exact,\n  strict: route.strict,\n  render: props => {\n    //如果是不需要权限 或者 已登录 或者 访问路径是/login，则直接返回当前组件\n    if (!route.requiresAuth || authed || route.path === authPath) {\n      return React.createElement(route.component, Object.assign({}, props, extraProps, {\n        route: route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    } //否则重定向到/login\n\n\n    return React.createElement(Redirect, {\n      to: {\n        pathname: authPath,\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}))) : null;\n\nexport default renderRoutes;","map":{"version":3,"sources":["D:\\react-admin-master\\src\\utils\\renderRoutes.js"],"names":["React","Route","Redirect","Switch","renderRoutes","routes","authed","authPath","extraProps","switchProps","map","route","i","key","path","exact","strict","props","requiresAuth","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;;AACA,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAQ,GAAG,QAA5B,EAAsCC,UAAU,GAAG,EAAnD,EAAuDC,WAAW,GAAG,EAArE,KAA4EJ,MAAM,GACtG,oBAAC,MAAD,oBAAYI,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACEJ,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KACX,oBAAC,KAAD;AACC,EAAA,GAAG,EAAED,KAAK,CAACE,GAAN,IAAaD,CADnB;AAEC,EAAA,IAAI,EAAED,KAAK,CAACG,IAFb;AAGC,EAAA,KAAK,EAAEH,KAAK,CAACI,KAHd;AAIC,EAAA,MAAM,EAAEJ,KAAK,CAACK,MAJf;AAKC,EAAA,MAAM,EAAGC,KAAD,IAAW;AAClB;AACA,QAAI,CAACN,KAAK,CAACO,YAAP,IAAuBZ,MAAvB,IAAiCK,KAAK,CAACG,IAAN,KAAeP,QAApD,EAA8D;AAC7D,aAAO,oBAAC,KAAD,CAAO,SAAP,oBAAqBU,KAArB,EAAgCT,UAAhC;AAA4C,QAAA,KAAK,EAAEG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACA,KAJiB,CAKlB;;;AACA,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEQ,QAAAA,QAAQ,EAAEZ,QAAZ;AAAsBa,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,CADsG,GAmBnG,IAnBJ;;AAqBA,eAAelB,YAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nconst renderRoutes = (routes, authed, authPath = '/login', extraProps = {}, switchProps = {}) => routes ? (\n\t<Switch {...switchProps}>\n\t\t{routes.map((route, i) => (\n\t\t\t<Route\n\t\t\t\tkey={route.key || i}\n\t\t\t\tpath={route.path}\n\t\t\t\texact={route.exact}\n\t\t\t\tstrict={route.strict}\n\t\t\t\trender={(props) => {\n\t\t\t\t\t//如果是不需要权限 或者 已登录 或者 访问路径是/login，则直接返回当前组件\n\t\t\t\t\tif (!route.requiresAuth || authed || route.path === authPath) {\n\t\t\t\t\t\treturn <route.component {...props} {...extraProps} route={route} />\n\t\t\t\t\t}\n\t\t\t\t\t//否则重定向到/login\n\t\t\t\t\treturn <Redirect to={{ pathname: authPath, state: { from: props.location } }} />\n\t\t\t\t}}\n\t\t\t/>\n\t\t))}\n\t</Switch>\n) : null\n\nexport default renderRoutes"]},"metadata":{},"sourceType":"module"}