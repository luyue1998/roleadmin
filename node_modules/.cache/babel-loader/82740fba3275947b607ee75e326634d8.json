{"ast":null,"code":"import axios from 'axios';\nimport baseURL from './baseUrl';\nimport { getLocal } from '../utils';\nimport { authChangeAction } from '../store/actionCreator';\nimport store from '../store'; //创建axios实例\n\nconst service = axios.create({\n  baseURL: baseURL,\n  // api的base_url\n  timeout: 200000,\n  // 请求超时时间\n  withCredentials: true // 选项表明了是否是跨域请求\n\n});\nservice.interceptors.request.use(config => {\n  // 请求头添加token\n  if (getLocal('authed')) {\n    config.headers.Authorization = \"Bearer \".concat(getLocal('authed'));\n  }\n\n  const flag = config.data && config.data.loading !== false || config.params && config.params.loading !== false;\n\n  if (flag) {\n    let loading;\n    loading = document.getElementById('ajaxLoading');\n    loading.style.display = 'block';\n  }\n\n  return config;\n}, err => {\n  console.log('请求失败');\n  return Promise.reject(err);\n}); //拦截响应\n\nservice.interceptors.response.use(config => {\n  if (config.data && config.data.loading !== false) {\n    let loading;\n    loading = document.getElementById('ajaxLoading');\n    loading.style.display = 'none';\n  }\n\n  return config;\n}, err => {\n  console.log('响应失败');\n  return Promise.reject(err);\n}); // respone拦截器\n\nservice.interceptors.response.use(response => {\n  const res = response.data;\n\n  if (res.code !== 1) {\n    res.code = res.data.code;\n    res.message = res.response.data.msg;\n    return Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, error => {\n  const status = error.response.status;\n\n  switch (status) {\n    case 401:\n      store.dispatch(authChangeAction(null));\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"sources":["D:\\react-admin-master\\src\\utils\\request.js"],"names":["axios","baseURL","getLocal","authChangeAction","store","service","create","timeout","withCredentials","interceptors","request","use","config","headers","Authorization","flag","data","loading","params","document","getElementById","style","display","err","console","log","Promise","reject","response","res","code","message","msg","error","status","dispatch"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport baseURL from './baseUrl'\nimport { getLocal } from '../utils'\nimport { authChangeAction } from '../store/actionCreator'\nimport store from '../store'\n\n//创建axios实例\nconst service = axios.create({\n    baseURL: baseURL, // api的base_url\n    timeout: 200000, // 请求超时时间\n    withCredentials: true // 选项表明了是否是跨域请求\n})\nservice.interceptors.request.use(config => {\n    // 请求头添加token\n    if (getLocal('authed')) {\n        config.headers.Authorization = `Bearer ${getLocal('authed')}`\n    }\n    const flag = (config.data && config.data.loading !==false) || (config.params && config.params.loading !== false)\n    if(flag){\n        let loading\n        loading = document.getElementById('ajaxLoading')\n        loading.style.display = 'block'\n    }\n    return config;\n}, err => {\n    console.log('请求失败')\n    return Promise.reject(err)\n})\n\n\n\n//拦截响应\nservice.interceptors.response.use(config => {\n    if(config.data && config.data.loading !==false){\n        let loading\n        loading = document.getElementById('ajaxLoading')\n        loading.style.display = 'none'\n    }\n    return config;\n}, err => {\n    console.log('响应失败')\n    return Promise.reject(err)\n})\n\n\n\n// respone拦截器\nservice.interceptors.response.use(\n    response => {\n        const res = response.data\n        if (res.code !== 1) {\n            res.code = res.data.code\n            res.message = res.response.data.msg\n            return Promise.reject('error')\n        } else {\n            return response.data\n        }\n    },\n    error => {\n        const { status } = error.response\n        switch (status) {\n            case 401:\n            store.dispatch(authChangeAction(null))\n                break;\n        \n            default:\n                break;\n        }\n        return Promise.reject(error)\n    }\n)\nexport default service\n"]},"metadata":{},"sourceType":"module"}