{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/date-picker/style/css\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"D:\\\\react-admin-master\\\\src\\\\common\\\\BaseForm\\\\index.js\";\nimport React from 'react';\nimport { getOptionsList } from '../../utils';\nconst FormItem = _Form.Item;\n\nclass FilterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.creatFormList = () => {\n      //用于双向数据绑定\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      const data = this.props.data;\n      const list = [];\n      data.forEach((item, index) => {\n        const type = item.type,\n              field = item.field,\n              label = item.label,\n              initialValue = item.initialValue,\n              width = item.width,\n              placeholder = item.placeholder;\n\n        switch (type) {\n          case 'input':\n            const inputItem = React.createElement(FormItem, {\n              key: field,\n              label: label,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 16\n              },\n              __self: this\n            }, getFieldDecorator(field, {\n              initialValue\n            })(React.createElement(_Input, {\n              style: {\n                width\n              },\n              type: \"text\",\n              placeholder: placeholder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            })));\n            list.push(inputItem);\n            break;\n\n          case 'select':\n            const selectItem = React.createElement(FormItem, {\n              key: field,\n              label: label,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26\n              },\n              __self: this\n            }, getFieldDecorator(field, {\n              initialValue\n            })(React.createElement(_Select, {\n              style: {\n                width\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, getOptionsList(item.list))));\n            list.push(selectItem);\n            break;\n\n          case 'chooseTime':\n            const beginTimeItem = React.createElement(FormItem, {\n              key: type,\n              label: label,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, getFieldDecorator('beginTime')(React.createElement(_DatePicker, {\n              showTime: true,\n              placeholder: placeholder,\n              format: \"YYYY-MM-DD HH:mm:ss\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            })));\n            list.push(beginTimeItem);\n            const endTimeItem = React.createElement(FormItem, {\n              key: \"EndTime\",\n              label: \"~\",\n              colon: false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, getFieldDecorator('EndTime')(React.createElement(_DatePicker, {\n              showTime: true,\n              placeholder: placeholder,\n              format: \"YYYY-MM-DD HH:mm:ss\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            })));\n            list.push(endTimeItem);\n            break;\n\n          default:\n        }\n      });\n      return list;\n    };\n\n    this.reset = () => {\n      this.props.form.resetFields();\n    };\n\n    this.handleFilterSubmit = () => {\n      const data = this.props.form.getFieldsValue();\n      this.props.handleSearch(data);\n    };\n  }\n\n  render() {\n    return React.createElement(_Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.creatFormList(), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      style: {\n        margin: '0 20px'\n      },\n      onClick: this.handleFilterSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\u67E5\\u8BE2\"), React.createElement(_Button, {\n      onClick: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u91CD\\u7F6E\")));\n  }\n\n}\n\nexport default _Form.create()(FilterForm);","map":{"version":3,"sources":["D:\\react-admin-master\\src\\common\\BaseForm\\index.js"],"names":["React","getOptionsList","FormItem","Item","FilterForm","Component","creatFormList","getFieldDecorator","props","form","data","list","forEach","item","index","type","field","label","initialValue","width","placeholder","inputItem","push","selectItem","beginTimeItem","endTimeItem","reset","resetFields","handleFilterSubmit","getFieldsValue","handleSearch","render","margin","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { getOptionsList } from '../../utils'\nimport { Input, Select, Form, Button, DatePicker } from 'antd'\nconst FormItem = Form.Item\n\nclass FilterForm extends React.Component{\n    creatFormList = () =>{\n        //用于双向数据绑定\n        const { getFieldDecorator } = this.props.form\n        const data = this.props.data;\n        const list = [];\n        data.forEach((item,index) => {\n            const { type, field, label, initialValue, width, placeholder } = item;\n            switch(type){\n                case 'input':\n                    const inputItem = <FormItem key={field} label={label}>\n                            {getFieldDecorator(field,{\n                                initialValue\n                            })(\n                                <Input style={{width}} type=\"text\" placeholder={placeholder} />\n                            )}\n                        </FormItem>\n                    list.push(inputItem);\n                break;\n                case 'select':\n                    const selectItem =  <FormItem key={field}  label={label}>\n                        {getFieldDecorator(field,{\n                            initialValue\n                        })(\n                            <Select style={{ width }}>\n                                {getOptionsList(item.list)}\n                            </Select>\n                        )}\n                    </FormItem>   \n                    list.push(selectItem); \n                break;\n                case 'chooseTime':\n                    const beginTimeItem = <FormItem key={type} label={label}>\n                        {getFieldDecorator('beginTime')(\n                            <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\n                        )}\n                    </FormItem>\n                    list.push(beginTimeItem); \n                    const endTimeItem = <FormItem key=\"EndTime\" label=\"~\" colon={false} >\n                        {\n                            getFieldDecorator('EndTime')(\n                                <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\n                            )\n                        }\n                    </FormItem>\n                    list.push(endTimeItem); \n                break;\n                default:    \n            }\n        })\n        return list;\n    }\n    reset = ()=>{\n        this.props.form.resetFields();\n    }\n    handleFilterSubmit = ()=>{\n        const data = this.props.form.getFieldsValue();\n        this.props.handleSearch(data);\n    }\n    render(){\n        return (\n            <Form   layout='inline'>\n                {this.creatFormList()}\n                <FormItem>\n                    <Button type=\"primary\" style={{ margin: '0 20px' }} onClick={this.handleFilterSubmit}>查询</Button>\n                    <Button onClick={this.reset}>重置</Button>\n                </FormItem>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(FilterForm);"]},"metadata":{},"sourceType":"module"}