{"ast":null,"code":"import { AUTH_CHANGE, PERMISSION_CHANGE, CURRENT_CHANGE } from './actionTypes';\nimport { createActions } from 'redux-actions';\nimport { recursionRouter } from '../utils/recursion-router';\nimport routes from '../router';\nimport request from '../utils/request';\nimport { filterRoutes } from '../utils';\nimport { recursionRouterThree } from '../utils/recursion-router';\nexport const doAuthChangeAction = createActions({\n  [AUTH_CHANGE]: res => {\n    return {\n      authStatus: res\n    };\n  },\n  [PERMISSION_CHANGE]: (permissionList, currentList, avatar, name) => {\n    return {\n      permissionList,\n      currentList,\n      avatar,\n      name\n    };\n  },\n  [CURRENT_CHANGE]: list => {\n    return {\n      currentList: list\n    };\n  }\n});\nexport const authChangeAction = token => {\n  return dispatch => {\n    const action = doAuthChangeAction.authChange(token);\n    dispatch(action);\n  };\n};\nexport const permissionAction = path => {\n  return dispatch => {\n    request({\n      url: '/user/info',\n      method: 'get'\n    }).then(res => {\n      const allList = routes[2].children;\n      res.data.data.push('index'); //把首页丢进去\n\n      const permissionList = recursionRouter(res.data.data, allList);\n      const defaultOpenKeys = filterRoutes(path);\n      const currentList = recursionRouterThree(defaultOpenKeys, permissionList);\n      const action = doAuthChangeAction.permissionChange(permissionList, currentList, res.data.avatar, res.data.name);\n      dispatch(action);\n    });\n  };\n};\nexport const currentAction = list => {\n  return dispatch => {\n    const action = doAuthChangeAction.currentChange(list);\n    dispatch(action);\n  };\n};","map":{"version":3,"sources":["D:\\react-admin-master\\src\\store\\actionCreator.js"],"names":["AUTH_CHANGE","PERMISSION_CHANGE","CURRENT_CHANGE","createActions","recursionRouter","routes","request","filterRoutes","recursionRouterThree","doAuthChangeAction","res","authStatus","permissionList","currentList","avatar","name","list","authChangeAction","token","dispatch","action","authChange","permissionAction","path","url","method","then","allList","children","data","push","defaultOpenKeys","permissionChange","currentAction","currentChange"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,iBAArB,EAAwCC,cAAxC,QAA8D,eAA9D;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAGA,OAAO,MAAMC,kBAAkB,GAAGN,aAAa,CAC3C;AACI,GAACH,WAAD,GAAeU,GAAD,IAAS;AACnB,WAAO;AACHC,MAAAA,UAAU,EAACD;AADR,KAAP;AAGH,GALL;AAMI,GAACT,iBAAD,GAAoB,CAACW,cAAD,EAAgBC,WAAhB,EAA4BC,MAA5B,EAAmCC,IAAnC,KAA4C;AAC5D,WAAO;AACHH,MAAAA,cADG;AAEHC,MAAAA,WAFG;AAGHC,MAAAA,MAHG;AAIHC,MAAAA;AAJG,KAAP;AAMH,GAbL;AAcI,GAACb,cAAD,GAAkBc,IAAD,IAAU;AACvB,WAAO;AACHH,MAAAA,WAAW,EAACG;AADT,KAAP;AAGH;AAlBL,CAD2C,CAAxC;AAuBP,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAU;AACtC,SAAQC,QAAD,IAAa;AACZ,UAAMC,MAAM,GAAGX,kBAAkB,CAACY,UAAnB,CAA8BH,KAA9B,CAAf;AACAC,IAAAA,QAAQ,CAACC,MAAD,CAAR;AACP,GAHD;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,IAAD,IAAS;AACrC,SAAQJ,QAAD,IAAa;AAChBb,IAAAA,OAAO,CAAC;AACJkB,MAAAA,GAAG,EAAE,YADD;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAAD,CAAP,CAICC,IAJD,CAIMhB,GAAG,IAAG;AACR,YAAMiB,OAAO,GAAGtB,MAAM,CAAC,CAAD,CAAN,CAAUuB,QAA1B;AACAlB,MAAAA,GAAG,CAACmB,IAAJ,CAASA,IAAT,CAAcC,IAAd,CAAmB,OAAnB,EAFQ,CAEmB;;AAC3B,YAAMlB,cAAc,GAAGR,eAAe,CAACM,GAAG,CAACmB,IAAJ,CAASA,IAAV,EAAeF,OAAf,CAAtC;AAEA,YAAMI,eAAe,GAAGxB,YAAY,CAACgB,IAAD,CAApC;AACA,YAAMV,WAAW,GAAGL,oBAAoB,CAACuB,eAAD,EAAiBnB,cAAjB,CAAxC;AACA,YAAMQ,MAAM,GAAGX,kBAAkB,CAACuB,gBAAnB,CAAoCpB,cAApC,EAAmDC,WAAnD,EAA+DH,GAAG,CAACmB,IAAJ,CAASf,MAAxE,EAA+EJ,GAAG,CAACmB,IAAJ,CAASd,IAAxF,CAAf;AACAI,MAAAA,QAAQ,CAACC,MAAD,CAAR;AAGH,KAfD;AAgBH,GAjBD;AAkBH,CAnBM;AAoBP,OAAO,MAAMa,aAAa,GAAIjB,IAAD,IAAS;AAClC,SAAQG,QAAD,IAAa;AACZ,UAAMC,MAAM,GAAGX,kBAAkB,CAACyB,aAAnB,CAAiClB,IAAjC,CAAf;AACAG,IAAAA,QAAQ,CAACC,MAAD,CAAR;AACP,GAHD;AAIH,CALM","sourcesContent":["import { AUTH_CHANGE,PERMISSION_CHANGE, CURRENT_CHANGE } from './actionTypes'\nimport { createActions } from 'redux-actions';\nimport { recursionRouter } from '../utils/recursion-router'\nimport routes from '../router'\nimport request from '../utils/request'\nimport { filterRoutes } from '../utils'\nimport { recursionRouterThree } from '../utils/recursion-router'\n\n\nexport const doAuthChangeAction = createActions(\n    {\n        [AUTH_CHANGE]:(res) => {\n            return {\n                authStatus:res\n            }\n        },\n        [PERMISSION_CHANGE]:(permissionList,currentList,avatar,name) => {\n            return {\n                permissionList,\n                currentList,\n                avatar,\n                name\n            }\n        },\n        [CURRENT_CHANGE]:(list) => {\n            return {\n                currentList:list\n            }\n        }\n    }\n)\n\nexport const authChangeAction = (token) =>{\n    return (dispatch) =>{\n            const action = doAuthChangeAction.authChange(token)\n            dispatch(action)\n    }\n}\n\nexport const permissionAction = (path) =>{\n    return (dispatch) =>{\n        request({\n            url: '/user/info',\n            method: 'get',\n        })\n        .then(res =>{\n            const allList = routes[2].children\n            res.data.data.push('index')//把首页丢进去\n            const permissionList = recursionRouter(res.data.data,allList)\n            \n            const defaultOpenKeys = filterRoutes(path)\n            const currentList = recursionRouterThree(defaultOpenKeys,permissionList)\n            const action = doAuthChangeAction.permissionChange(permissionList,currentList,res.data.avatar,res.data.name)\n            dispatch(action)\n\n            \n        })\n    }\n}\nexport const currentAction = (list) =>{\n    return (dispatch) =>{\n            const action = doAuthChangeAction.currentChange(list)\n            dispatch(action)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}