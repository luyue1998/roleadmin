{"ast":null,"code":"import \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/modal/style/css\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"D:\\\\react-admin-master\\\\src\\\\pages\\\\User\\\\Permission\\\\UserManage\\\\index.js\";\nimport React from \"react\";\nimport BaseForm from '../../../../common/BaseForm';\nimport Etable from \"../../../../common/Etable\";\nimport { updateSelectedItem } from '../../../../utils';\nimport request from '../../../../utils/request';\nconst FormItem = _Form.Item;\nexport default class Permission extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.params = {\n      page: 1,\n      pageSize: 5\n    };\n    this.data = [{\n      type: 'input',\n      initialValue: '',\n      label: '用户名',\n      placeholder: '请输入用户名',\n      field: 'username',\n      width: '150px'\n    }];\n    this.state = {\n      rowSelection: {\n        selectedRowKeys: [],\n        selectedRows: []\n      },\n      type: 'radio',\n      list: [],\n      roleVisible: false,\n      perVisible: false,\n      authVisible: false,\n      checkedKeys: [],\n      targetKeys: [],\n      detail: {},\n      title: '' //查询\n\n    };\n\n    this.handleSearch = data => {\n      console.log(data);\n    };\n\n    this.handleUser = () => {\n      this.setState({\n        detail: {\n          loginName: '',\n          name: '',\n          mobile: '',\n          address: '',\n          email: ''\n        },\n        roleVisible: true,\n        title: '创建用户'\n      });\n    };\n\n    this.userEdit = item => {\n      this.setState({\n        detail: item,\n        roleVisible: true,\n        title: '编辑用户'\n      });\n    };\n\n    this.resetPassword = () => {\n      const _this = this;\n\n      _Modal.confirm({\n        title: '提示',\n        content: '确认要重置密码吗?',\n        okText: '确认',\n        cancelText: '取消',\n        onOk: _this.doResetPassword\n      });\n    };\n\n    this.doResetPassword = () => {\n      console.log(11);\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  } //请求列表\n\n\n  requestList() {\n    var res = {\n      \"code\": 1,\n      \"data\": [{\n        \"id\": 169,\n        \"status\": 1,\n        \"loginName\": \"admin\",\n        \"name\": \"admin\",\n        \"realName\": null,\n        \"mobile\": \"18680343705\",\n        \"address\": \"54@qq.com\",\n        \"email\": \"54@qq.com\",\n        \"lastLoginTime\": 1561458517000,\n        \"erpMemberRoles\": [{\n          \"id\": 17,\n          \"roleName\": \"超级管理员\"\n        }]\n      }, {\n        \"id\": 171,\n        \"status\": 1,\n        \"loginName\": \"鲁越\",\n        \"name\": \"鲁越\",\n        \"realName\": null,\n        \"mobile\": \"13088888893\",\n        \"address\": \"aaa@qq.com\",\n        \"email\": \"aaa@qq.com\",\n        \"lastLoginTime\": 1552288845000,\n        \"erpMemberRoles\": [{\n          \"id\": 17,\n          \"roleName\": \"普通用户\"\n        }]\n      }]\n    };\n\n    if (res.code === 1) {\n      let dataSource = res.data.map((item, index) => {\n        item.key = index;\n        return item;\n      });\n      this.setState({\n        dataSource\n      });\n    }\n  } // 创建用户\n\n\n  render() {\n    const columns = [{\n      title: '角色ID',\n      dataIndex: 'id'\n    }, {\n      title: '登录名',\n      dataIndex: 'loginName'\n    }, {\n      title: '真实姓名',\n      dataIndex: 'name'\n    }, {\n      title: '联系电话',\n      dataIndex: 'mobile'\n    }, {\n      title: '权限',\n      dataIndex: 'erpMemberRoles',\n      render: list => {\n        return list.map(item => {\n          return item.roleName;\n        }).join(\",\");\n      }\n    }, {\n      title: '联系地址',\n      dataIndex: 'address'\n    }, {\n      title: '操作',\n      render: item => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(_Button, {\n          size: \"small\",\n          type: \"primary\",\n          onClick: this.userEdit.bind(this, item),\n          style: {\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\"), React.createElement(_Button, {\n          size: \"small\",\n          type: \"primary\",\n          onClick: this.resetPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"\\u91CD\\u7F6E\\u5BC6\\u7801\"));\n      }\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(BaseForm, {\n      data: this.data,\n      handleSearch: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"\\u521B\\u5EFA\\u7528\\u6237\")), React.createElement(_Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Etable, {\n      that: this,\n      dataSource: this.state.dataSource,\n      columns: columns,\n      rowSelection: this.state.rowSelection,\n      updateSelectedItem: updateSelectedItem.bind(this),\n      pagination: this.state.pagination,\n      type: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(_Modal, {\n      title: this.state.title,\n      visible: this.state.roleVisible,\n      onOk: this.creatRoleSubmit,\n      onCancel: () => {\n        this.setState({\n          roleVisible: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(CreatUser, {\n      detail: this.state.detail,\n      wrappedComponentRef: inst => this.roleForm = inst,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })));\n  }\n\n} //创建角色\n\nclass CreatUser extends React.Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    const detail = this.props.detail;\n    return React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({\n      label: \"\\u767B\\u5F55\\u540D\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), getFieldDecorator('loginName', {\n      initialValue: detail.loginName\n    })(React.createElement(_Input, {\n      type: \"text\",\n      placeholder: \"\\u767B\\u5F55\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u771F\\u5B9E\\u59D3\\u540D\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), getFieldDecorator('name', {\n      initialValue: detail.name\n    })(React.createElement(_Input, {\n      type: \"text\",\n      placeholder: \"\\u771F\\u5B9E\\u59D3\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u8054\\u7CFB\\u7535\\u8BDD\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), getFieldDecorator('mobile', {\n      initialValue: detail.mobile\n    })(React.createElement(_Input, {\n      type: \"text\",\n      placeholder: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u8054\\u7CFB\\u5730\\u5740\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), getFieldDecorator('address', {\n      initialValue: detail.address\n    })(React.createElement(_Input, {\n      type: \"text\",\n      placeholder: \"\\u8054\\u7CFB\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7535\\u5B50\\u90AE\\u7BB1\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), getFieldDecorator('email', {\n      initialValue: detail.email\n    })(React.createElement(_Input, {\n      type: \"text\",\n      placeholder: \"\\u7535\\u5B50\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nCreatUser = _Form.create()(CreatUser);","map":{"version":3,"sources":["D:\\react-admin-master\\src\\pages\\User\\Permission\\UserManage\\index.js"],"names":["React","BaseForm","Etable","updateSelectedItem","request","FormItem","Item","Permission","Component","params","page","pageSize","data","type","initialValue","label","placeholder","field","width","state","rowSelection","selectedRowKeys","selectedRows","list","roleVisible","perVisible","authVisible","checkedKeys","targetKeys","detail","title","handleSearch","console","log","handleUser","setState","loginName","name","mobile","address","email","userEdit","item","resetPassword","_this","confirm","content","okText","cancelText","onOk","doResetPassword","componentDidMount","requestList","res","code","dataSource","map","index","key","render","columns","dataIndex","roleName","join","bind","marginRight","margin","pagination","creatRoleSubmit","inst","roleForm","CreatUser","getFieldDecorator","props","form","formItemLayout","labelCol","span","wrapperCol","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Card, Modal, Form,Input, Button } from \"antd\";\nimport BaseForm from '../../../../common/BaseForm'\nimport Etable from \"../../../../common/Etable\";\nimport { updateSelectedItem } from '../../../../utils'\nimport request from '../../../../utils/request'\nconst FormItem = Form.Item\n\n\nexport default class Permission extends React.Component{\n\n    params = {\n        page:1,\n        pageSize:5\n    }\n    data = [\n        {\n            type:'input',\n            initialValue:'',\n            label:'用户名',\n            placeholder:'请输入用户名',\n            field:'username',\n            width:'150px'\n        }\n    ]\n\n    state= {\n        rowSelection:{\n            selectedRowKeys:[],\n            selectedRows:[],\n        },\n        type:'radio',\n        list:[],\n        roleVisible:false,\n        perVisible:false,\n        authVisible:false,\n        checkedKeys:[],\n        targetKeys:[],\n        detail:{},\n        title:''\n    }\n\n    //查询\n    handleSearch = (data)=>{\n        console.log(data)\n    }\n\n    componentDidMount(){\n        this.requestList()\n    }\n\n    //请求列表\n    requestList(){\n        var res = {\"code\":1,\"data\":[{\"id\":169,\"status\":1,\"loginName\":\"admin\",\"name\":\"admin\",\"realName\":null,\"mobile\":\"18680343705\",\"address\":\"54@qq.com\",\"email\":\"54@qq.com\",\"lastLoginTime\":1561458517000,\"erpMemberRoles\":[{\"id\":17,\"roleName\":\"超级管理员\"}]},{\"id\":171,\"status\":1,\"loginName\":\"鲁越\",\"name\":\"鲁越\",\"realName\":null,\"mobile\":\"13088888893\",\"address\":\"aaa@qq.com\",\"email\":\"aaa@qq.com\",\"lastLoginTime\":1552288845000,\"erpMemberRoles\":[{\"id\":17,\"roleName\":\"普通用户\"}]}]}\n       \n        if(res.code ===1){\n            let dataSource = res.data.map((item, index) => {\n                item.key = index;\n                return item;\n            });\n            this.setState({\n                dataSource\n            })\n        }\n    }\n\n    // 创建用户\n    handleUser=()=>{\n        this.setState({\n            detail:{\n                loginName:'',\n                name:'',\n                mobile:'',\n                address:'',\n                email:''\n            },\n            roleVisible:true,\n            title:'创建用户'\n        })\n    }\n    //编辑用户\n    userEdit=(item)=>{\n        this.setState({\n            detail:item,\n            roleVisible:true,\n            title:'编辑用户'\n        })\n    }\n    //重置密码\n    resetPassword=()=>{\n        const _this = this\n        Modal.confirm({\n            title: '提示',\n            content: '确认要重置密码吗?',\n            okText: '确认',\n            cancelText: '取消',\n            onOk:_this.doResetPassword\n          });\n    }\n    //确认重置\n    doResetPassword = ()=>{\n        console.log(11)\n    }\n    \n\n\n\n    render(){\n        const columns = [\n            {\n                title: '角色ID',\n                dataIndex: 'id'\n            }, \n            {\n                title: '登录名',\n                dataIndex: 'loginName'\n            },\n            {\n                title: '真实姓名',\n                dataIndex: 'name'\n            },\n            {\n                title: '联系电话',\n                dataIndex: 'mobile'\n            },\n            {\n                title: '权限',\n                dataIndex: 'erpMemberRoles',\n                render:(list)=>{\n                    return list.map(item =>{\n                        return item.roleName\n                    }).join(\",\")\n                }\n            },\n            {\n                title: '联系地址',\n                dataIndex: 'address'\n            },\n            {\n                title:'操作',\n                render:(item)=>{\n                    return (\n                        <div>\n                            <Button size=\"small\" type=\"primary\" onClick={this.userEdit.bind(this,item)} style={{marginRight:'10px'}}>编辑</Button>\n                            <Button size=\"small\" type=\"primary\" onClick={this.resetPassword} >重置密码</Button>\n                        </div>\n                    )\n                }\n            }\n        ];\n\n        return (\n            <div>\n                <Card>\n                    <BaseForm\n                        data={this.data}\n                        handleSearch = {this.handleSearch}\n                    />\n                </Card>\n                <Card style={{margin:'10px 0'}}>\n                    <Button type=\"primary\" onClick={this.handleUser}>创建用户</Button>\n                </Card>\n                <Card>\n                    <Etable\n                        that={this}\n                        dataSource={this.state.dataSource}\n                        columns={columns}\n                        rowSelection={this.state.rowSelection}\n                        updateSelectedItem={updateSelectedItem.bind(this)}\n                        pagination={this.state.pagination}\n                        type={this.state.type}\n                    >    \n                    </Etable>\n                </Card>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.roleVisible}\n                    onOk={this.creatRoleSubmit}\n                    onCancel={()=>{this.setState({\n                        roleVisible:false\n                    })}}\n                >\n                    <CreatUser\n                        detail = {this.state.detail}\n                        wrappedComponentRef={(inst) => this.roleForm = inst} \n                    />\n                </Modal>\n            </div>\n        )\n    }\n}\n\n//创建角色\nclass CreatUser extends React.Component{\n\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 5},\n            wrapperCol: {span: 16}\n        }\n        const detail = this.props.detail\n        return (\n            <Form>\n                <FormItem label=\"登录名\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('loginName',{\n                            initialValue:detail.loginName\n                        })(\n                            <Input  type=\"text\" placeholder=\"登录名\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"真实姓名\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('name',{\n                            initialValue:detail.name\n                        })(\n                            <Input  type=\"text\" placeholder=\"真实姓名\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"联系电话\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('mobile',{\n                            initialValue:detail.mobile\n                        })(\n                            <Input  type=\"text\" placeholder=\"联系电话\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"联系地址\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('address',{\n                            initialValue:detail.address\n                        })(\n                            <Input  type=\"text\" placeholder=\"联系地址\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"电子邮箱\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('email',{\n                            initialValue:detail.email\n                        })(\n                            <Input  type=\"text\" placeholder=\"电子邮箱\" />\n                        )\n                    }\n                </FormItem>\n            </Form>\n        )\n    }\n}\nCreatUser = Form.create()(CreatUser)\n"]},"metadata":{},"sourceType":"module"}